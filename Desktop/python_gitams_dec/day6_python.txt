s={"apple","bat","cat"}
print(s)
{'cat', 'bat', 'apple'}
A set is a collection which is unordered and unindexed. In Python sets are written with curly brackets. You cannot access items in a set by referring to an index, since sets are unordered the items has no index.

But you can loop through the set items using a for loop, or ask if a specified value is present in a set, by using the in keyword

for i in s:
    print(i)

"cat" in s

Once a set is created, you cannot change its items, but you can add new items. Add Items To add one item to a set use the add() method.

To add more than one item to a set use the update() method.

s.add("goat")

s.update(["mat","pot","cherry"])
To determine how many items a set has, use the len() method.
To determine how many items a set has, use the len() method.
len(s)

Remove Item To remove an item in a set, use the remove(), or the discard() method. f the item to remove does not exist, remove() will raise an error

If the item to remove does not exist, discard() will NOT raise an error.
You can also use the pop(), method to remove an item, but this method will remove the last item. Remember that sets are unordered, so you will not know what item that gets removed.

The return value of the pop() method is the removed item.
The clear() method empties the set:

p={"hello","iam","fine"}
print(p)
p.clear()
print(p)
The del keyword will delete the set completely:
del p
print(p)

Join Two Sets There are several ways to join two or more sets in Python.

You can use the union() method that returns a new set containing all items from both sets, or the update() method that inserts all the items from one set into another:
s1={"a","b","c"}
s2={1,2,3}
s3=s1.union(s2)
s3
The update() method inserts the items in set2 into set1:
s1={"p","q","r"}
s2={1,2,3}
s1.update(s2)
help("set")